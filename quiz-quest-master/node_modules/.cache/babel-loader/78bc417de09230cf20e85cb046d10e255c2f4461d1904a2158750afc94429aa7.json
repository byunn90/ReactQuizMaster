{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kayha\\\\Desktop\\\\bootcamp\\\\projects\\\\react-Quizz-Master\\\\ReactQuizMaster\\\\quiz-quest-master\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useReducer } from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Loader from \"./Loader\";\nimport Error from \"./Error\";\nimport StartScreen from \"./StartScreen\";\nimport Question from \"./Question\";\nimport NextButton from \"./NextButton\";\nimport Progress from \"./Progress\";\nimport FinishScreen from \"./FinishedScreen\";\nimport Footer from \"./Footer\";\nimport Timer from \"./Timer\";\nimport questionsData from \"../data/questions.json\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SECS_PER_QUESTION = 30;\nconst initialState = {\n  questions: [],\n  status: \"loading\",\n  index: 0,\n  answer: null,\n  points: 0,\n  highscore: 0,\n  secondsRemaining: null\n};\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"dataReceived\":\n      return {\n        ...state,\n        questions: action.payload,\n        status: \"ready\"\n      };\n    // other cases remain unchanged\n    default:\n      throw new Error(\"Action is Unknown\");\n  }\n}\nexport default function App() {\n  _s();\n  const [{\n    questions,\n    status,\n    index,\n    answer,\n    points,\n    highscore,\n    secondsRemaining\n  }, dispatch] = useReducer(reducer, initialState);\n  const numQuestions = questions.length;\n  const maxPossiblePoints = questions.reduce((prev, cur) => prev + cur.points, 0);\n  useEffect(function () {\n    dispatch({\n      type: \"dataReceived\",\n      payload: questionsData\n    }); // Use imported JSON data\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      children: [status === \"loading\" && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 34\n      }, this), status === \"error\" && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 32\n      }, this), status === \"ready\" && /*#__PURE__*/_jsxDEV(StartScreen, {\n        numQuestions: numQuestions,\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), status === \"active\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Progress, {\n          index: index,\n          numQuestions: numQuestions,\n          points: points,\n          maxPossiblePoints: maxPossiblePoints,\n          answer: answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Question, {\n          question: questions[index],\n          dispatch: dispatch,\n          answer: answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Timer, {\n            dispatch: dispatch,\n            secondsRemaining: secondsRemaining\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(NextButton, {\n            dispatch: dispatch,\n            answer: answer,\n            numQuestions: numQuestions,\n            index: index\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), status === \"finished\" && /*#__PURE__*/_jsxDEV(FinishScreen, {\n        points: points,\n        maxPossiblePoints: maxPossiblePoints,\n        highscore: highscore,\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xedOq8bLKj4Mgy2yu8pWlXcZI+g=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useReducer","Header","Main","Loader","Error","StartScreen","Question","NextButton","Progress","FinishScreen","Footer","Timer","questionsData","jsxDEV","_jsxDEV","Fragment","_Fragment","SECS_PER_QUESTION","initialState","questions","status","index","answer","points","highscore","secondsRemaining","reducer","state","action","type","payload","App","_s","dispatch","numQuestions","length","maxPossiblePoints","reduce","prev","cur","className","children","fileName","_jsxFileName","lineNumber","columnNumber","question","_c","$RefreshReg$"],"sources":["C:/Users/Kayha/Desktop/bootcamp/projects/react-Quizz-Master/ReactQuizMaster/quiz-quest-master/src/components/App.js"],"sourcesContent":["import { useEffect, useReducer } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Main from \"./Main\";\r\nimport Loader from \"./Loader\";\r\nimport Error from \"./Error\";\r\nimport StartScreen from \"./StartScreen\";\r\nimport Question from \"./Question\";\r\nimport NextButton from \"./NextButton\";\r\nimport Progress from \"./Progress\";\r\nimport FinishScreen from \"./FinishedScreen\";\r\nimport Footer from \"./Footer\";\r\nimport Timer from \"./Timer\";\r\nimport questionsData from \"../data/questions.json\";\r\n\r\nconst SECS_PER_QUESTION = 30;\r\nconst initialState = {\r\n  questions: [],\r\n  status: \"loading\",\r\n  index: 0,\r\n  answer: null,\r\n  points: 0,\r\n  highscore: 0,\r\n  secondsRemaining: null,\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case \"dataReceived\":\r\n      return { ...state, questions: action.payload, status: \"ready\" };\r\n    // other cases remain unchanged\r\n    default:\r\n      throw new Error(\"Action is Unknown\");\r\n  }\r\n}\r\n\r\nexport default function App() {\r\n  const [\r\n    { questions, status, index, answer, points, highscore, secondsRemaining },\r\n    dispatch,\r\n  ] = useReducer(reducer, initialState);\r\n\r\n  const numQuestions = questions.length;\r\n  const maxPossiblePoints = questions.reduce(\r\n    (prev, cur) => prev + cur.points,\r\n    0\r\n  );\r\n\r\n  useEffect(function () {\r\n    dispatch({ type: \"dataReceived\", payload: questionsData }); // Use imported JSON data\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n      <Main>\r\n        {status === \"loading\" && <Loader />}\r\n        {status === \"error\" && <Error />}\r\n        {status === \"ready\" && (\r\n          <StartScreen numQuestions={numQuestions} dispatch={dispatch} />\r\n        )}\r\n        {status === \"active\" && (\r\n          <>\r\n            <Progress\r\n              index={index}\r\n              numQuestions={numQuestions}\r\n              points={points}\r\n              maxPossiblePoints={maxPossiblePoints}\r\n              answer={answer}\r\n            />\r\n            <Question\r\n              question={questions[index]}\r\n              dispatch={dispatch}\r\n              answer={answer}\r\n            />\r\n            <Footer>\r\n              <Timer dispatch={dispatch} secondsRemaining={secondsRemaining} />\r\n              <NextButton\r\n                dispatch={dispatch}\r\n                answer={answer}\r\n                numQuestions={numQuestions}\r\n                index={index}\r\n              />\r\n            </Footer>\r\n          </>\r\n        )}\r\n        {status === \"finished\" && (\r\n          <FinishScreen\r\n            points={points}\r\n            maxPossiblePoints={maxPossiblePoints}\r\n            highscore={highscore}\r\n            dispatch={dispatch}\r\n          />\r\n        )}\r\n      </Main>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}