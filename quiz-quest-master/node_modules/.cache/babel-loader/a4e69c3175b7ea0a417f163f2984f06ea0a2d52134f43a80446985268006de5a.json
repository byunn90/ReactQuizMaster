{"ast":null,"code":"import{useEffect,useReducer}from\"react\";import Header from\"./Header\";import Main from\"./Main\";import Loader from\"./Loader\";import Error from\"./Error\";import StartScreen from\"./StartScreen\";import Question from\"./Question\";import NextButton from\"./NextButton\";import Progress from\"./Progress\";import FinishScreen from\"./FinishedScreen\";import Footer from\"./Footer\";import Timer from\"./Timer\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const SECS_PER_QUESTION=30;const initialState={questions:[],// 'loading', 'error', 'ready', 'active', 'finished'\nstatus:\"loading\",index:0,answer:null,points:0,highscore:0,secondsRemaining:null};function reducer(state,action){switch(action.type){case\"dataReceived\":return{...state,questions:action.payload,status:\"ready\"};case\"dataFailed\":return{...state,status:\"error\"};case\"start\":return{...state,status:\"active\",secondsRemaining:state.questions.length*SECS_PER_QUESTION};case\"newAnswer\":const question=state.questions.at(state.index);return{...state,answer:action.payload,points:action.payload===question.correctOption?state.points+question.points:state.points};case\"nextQuestion\":return{...state,index:state.index+1,answer:null};case\"finish\":return{...state,status:\"finished\",highscore:state.points>state.highscore?state.points:state.highscore};case\"restart\":return{...initialState,questions:state.questions,status:\"ready\"};// return {\n//   ...state,\n//   points: 0,\n//   highscore: 0,\n//   index: 0,\n//   answer: null,\n//   status: \"ready\",\n// };\ncase\"tick\":return{...state,secondsRemaining:state.secondsRemaining-1,status:state.secondsRemaining===0?\"finished\":state.status};default:throw new Error(\"Action is Unknown\");}}export default function App(){const[{questions,status,index,answer,points,highscore,secondsRemaining},dispatch]=useReducer(reducer,initialState);const numQuestions=questions.length;const maxPossiblePoints=questions.reduce((prev,cur)=>prev+cur.points,0);useEffect(function(){fetch(\"http://localhost:9000/questions\").then(res=>res.json()).then(data=>dispatch({type:\"dataReceived\",payload:data})).catch(err=>dispatch({type:\"dataFailed\"}));},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(Main,{children:[status===\"loading\"&&/*#__PURE__*/_jsx(Loader,{}),status===\"error\"&&/*#__PURE__*/_jsx(Error,{}),status===\"ready\"&&/*#__PURE__*/_jsx(StartScreen,{numQuestions:numQuestions,dispatch:dispatch}),status===\"active\"&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Progress,{index:index,numQuestions:numQuestions,points:points,maxPossiblePoints:maxPossiblePoints,answer:answer}),/*#__PURE__*/_jsx(Question,{question:questions[index],dispatch:dispatch,answer:answer}),/*#__PURE__*/_jsxs(Footer,{children:[/*#__PURE__*/_jsx(Timer,{dispatch:dispatch,secondsRemaining:secondsRemaining}),/*#__PURE__*/_jsx(NextButton,{dispatch:dispatch,answer:answer,numQuestions:numQuestions,index:index})]})]}),status===\"finished\"&&/*#__PURE__*/_jsx(FinishScreen,{points:points,maxPossiblePoints:maxPossiblePoints,highscore:highscore,dispatch:dispatch})]})]});}","map":{"version":3,"names":["useEffect","useReducer","Header","Main","Loader","Error","StartScreen","Question","NextButton","Progress","FinishScreen","Footer","Timer","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","SECS_PER_QUESTION","initialState","questions","status","index","answer","points","highscore","secondsRemaining","reducer","state","action","type","payload","length","question","at","correctOption","App","dispatch","numQuestions","maxPossiblePoints","reduce","prev","cur","fetch","then","res","json","data","catch","err","className","children"],"sources":["C:/Users/Kayha/Desktop/bootcamp/projects/react-Quizz-Master/ReactQuizMaster/quiz-quest-master/src/components/App.js"],"sourcesContent":["import { useEffect, useReducer } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Main from \"./Main\";\r\nimport Loader from \"./Loader\";\r\nimport Error from \"./Error\";\r\nimport StartScreen from \"./StartScreen\";\r\nimport Question from \"./Question\";\r\nimport NextButton from \"./NextButton\";\r\nimport Progress from \"./Progress\";\r\nimport FinishScreen from \"./FinishedScreen\";\r\nimport Footer from \"./Footer\";\r\nimport Timer from \"./Timer\";\r\n\r\nconst SECS_PER_QUESTION = 30;\r\nconst initialState = {\r\n  questions: [],\r\n  // 'loading', 'error', 'ready', 'active', 'finished'\r\n  status: \"loading\",\r\n  index: 0,\r\n  answer: null,\r\n  points: 0,\r\n  highscore: 0,\r\n  secondsRemaining: null,\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case \"dataReceived\":\r\n      return { ...state, questions: action.payload, status: \"ready\" };\r\n    case \"dataFailed\":\r\n      return {\r\n        ...state,\r\n        status: \"error\",\r\n      };\r\n    case \"start\":\r\n      return {\r\n        ...state,\r\n        status: \"active\",\r\n        secondsRemaining: state.questions.length * SECS_PER_QUESTION,\r\n      };\r\n    case \"newAnswer\":\r\n      const question = state.questions.at(state.index);\r\n      return {\r\n        ...state,\r\n        answer: action.payload,\r\n        points:\r\n          action.payload === question.correctOption\r\n            ? state.points + question.points\r\n            : state.points,\r\n      };\r\n    case \"nextQuestion\":\r\n      return { ...state, index: state.index + 1, answer: null };\r\n    case \"finish\":\r\n      return {\r\n        ...state,\r\n        status: \"finished\",\r\n        highscore:\r\n          state.points > state.highscore ? state.points : state.highscore,\r\n      };\r\n    case \"restart\":\r\n      return { ...initialState, questions: state.questions, status: \"ready\" };\r\n    // return {\r\n    //   ...state,\r\n    //   points: 0,\r\n    //   highscore: 0,\r\n    //   index: 0,\r\n    //   answer: null,\r\n    //   status: \"ready\",\r\n    // };\r\n    case \"tick\":\r\n      return {\r\n        ...state,\r\n        secondsRemaining: state.secondsRemaining - 1,\r\n        status: state.secondsRemaining === 0 ? \"finished\" : state.status,\r\n      };\r\n\r\n    default:\r\n      throw new Error(\"Action is Unknown\");\r\n  }\r\n}\r\n\r\nexport default function App() {\r\n  const [\r\n    { questions, status, index, answer, points, highscore, secondsRemaining },\r\n    dispatch,\r\n  ] = useReducer(reducer, initialState);\r\n\r\n  const numQuestions = questions.length;\r\n  const maxPossiblePoints = questions.reduce(\r\n    (prev, cur) => prev + cur.points,\r\n    0\r\n  );\r\n\r\n  useEffect(function () {\r\n    fetch(\"http://localhost:9000/questions\")\r\n      .then((res) => res.json())\r\n      .then((data) => dispatch({ type: \"dataReceived\", payload: data }))\r\n      .catch((err) => dispatch({ type: \"dataFailed\" }));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n      <Main>\r\n        {status === \"loading\" && <Loader />}\r\n        {status === \"error\" && <Error />}\r\n        {status === \"ready\" && (\r\n          <StartScreen numQuestions={numQuestions} dispatch={dispatch} />\r\n        )}\r\n        {status === \"active\" && (\r\n          <>\r\n            <Progress\r\n              index={index}\r\n              numQuestions={numQuestions}\r\n              points={points}\r\n              maxPossiblePoints={maxPossiblePoints}\r\n              answer={answer}\r\n            />\r\n            <Question\r\n              question={questions[index]}\r\n              dispatch={dispatch}\r\n              answer={answer}\r\n            />\r\n            <Footer>\r\n              <Timer dispatch={dispatch} secondsRemaining={secondsRemaining} />\r\n              <NextButton\r\n                dispatch={dispatch}\r\n                answer={answer}\r\n                numQuestions={numQuestions}\r\n                index={index}\r\n              />\r\n            </Footer>\r\n          </>\r\n        )}\r\n        {status === \"finished\" && (\r\n          <FinishScreen\r\n            points={points}\r\n            maxPossiblePoints={maxPossiblePoints}\r\n            highscore={highscore}\r\n            dispatch={dispatch}\r\n          />\r\n        )}\r\n      </Main>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}